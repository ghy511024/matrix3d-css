"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var cos = Math.cos;
var sin = Math.sin;
var tan = Math.tan;
var floor = Math.floor;
var sqrt = Math.sqrt;
var deg2PI = function (deg) { return Math.PI / 180 * deg; };
var Matrix3D = /** @class */ (function () {
    function Matrix3D(option) {
        this.arr = [];
        this.row = 4;
        this.cols = 4;
        if (!option) {
            this.init();
        }
        else if (option instanceof Matrix3D) {
            this.arr = option.arr;
        }
        else if (Array.isArray(option)) {
            if (option.length != 16) {
                throw new Error("option.length must 16");
            }
            else {
                this.arr = option;
            }
        }
        else if (typeof option == 'object') {
            var matrix = new Matrix3D();
            if (option.translate) {
                matrix.translate(option.translate.x || 0, option.translate.x || 0, option.translate.x || 0);
            }
            if (option.scale) {
                matrix.scaleX(option.scale.x || 1).scaleY(option.scale.y || 1).scaleZ(option.scale.z || 1);
            }
            if (option.rotate) {
                matrix.rotateX(option.rotate.x || 0).rotateY(option.rotate.y || 0).rotateZ(option.rotate.z || 0);
            }
            if (option.skew) {
                matrix.skewX(option.skew.x || 0).skewY(option.skew.y || 0);
            }
            this.arr = matrix.arr;
        }
    }
    Matrix3D.prototype.init = function () {
        var allTotal = this.row * this.cols;
        // 总项目数量
        for (var i = 0; i < allTotal; i++) {
            var row = floor(i / this.cols);
            if (row === i % this.cols) {
                this.arr.push(1);
            }
            else {
                this.arr.push(0);
            }
        }
    };
    Matrix3D.prototype.multiply = function (matrix) {
        // 矩阵乘法
        var arr = this.arr;
        var b = matrix.arr;
        var c00 = arr[0] * b[0] + arr[1] * b[4] + arr[2] * b[8] + arr[3] * b[12];
        var c01 = arr[0] * b[1] + arr[1] * b[5] + arr[2] * b[9] + arr[3] * b[13];
        var c02 = arr[0] * b[2] + arr[1] * b[6] + arr[2] * b[10] + arr[3] * b[14];
        var c03 = arr[0] * b[3] + arr[1] * b[7] + arr[2] * b[11] + arr[3] * b[15];
        var c10 = arr[4] * b[0] + arr[5] * b[4] + arr[6] * b[8] + arr[7] * b[12];
        var c11 = arr[4] * b[1] + arr[5] * b[5] + arr[6] * b[9] + arr[7] * b[13];
        var c12 = arr[4] * b[2] + arr[5] * b[6] + arr[6] * b[10] + arr[7] * b[14];
        var c13 = arr[4] * b[3] + arr[5] * b[7] + arr[6] * b[11] + arr[7] * b[15];
        var c20 = arr[8] * b[0] + arr[9] * b[4] + arr[10] * b[8] + arr[11] * b[12];
        var c21 = arr[8] * b[1] + arr[9] * b[5] + arr[10] * b[9] + arr[11] * b[13];
        var c22 = arr[8] * b[2] + arr[9] * b[6] + arr[10] * b[10] + arr[11] * b[14];
        var c23 = arr[8] * b[3] + arr[9] * b[7] + arr[10] * b[11] + arr[11] * b[15];
        var c30 = arr[12] * b[0] + arr[13] * b[4] + arr[14] * b[8] + arr[15] * b[12];
        var c31 = arr[12] * b[1] + arr[13] * b[5] + arr[14] * b[9] + arr[15] * b[13];
        var c32 = arr[12] * b[2] + arr[13] * b[6] + arr[14] * b[10] + arr[15] * b[14];
        var c33 = arr[12] * b[3] + arr[13] * b[7] + arr[14] * b[11] + arr[15] * b[15];
        this.arr = [
            c00, c01, c02, c03,
            c10, c11, c12, c13,
            c20, c21, c22, c23,
            c30, c31, c32, c33
        ];
        return this;
    };
    Matrix3D.prototype.scale = function (s) {
        return this.scaleX(s).scaleY(s).scaleZ(s);
    };
    Matrix3D.prototype.scaleX = function (s) {
        var scaleMatrix = new Matrix3D([
            s, 0, 0, 0,
            0, 1, 0, 0,
            0, 0, 1, 0,
            0, 0, 0, 1
        ]);
        return this.multiply(scaleMatrix);
    };
    Matrix3D.prototype.scaleY = function (s) {
        var scaleMatrix = new Matrix3D([
            1, 0, 0, 0,
            0, s, 0, 0,
            0, 0, 1, 0,
            0, 0, 0, 1
        ]);
        return this.multiply(scaleMatrix);
    };
    Matrix3D.prototype.scaleZ = function (s) {
        var scaleMatrix = new Matrix3D([
            1, 0, 0, 0,
            0, 1, 0, 0,
            0, 0, s, 0,
            0, 0, 0, 1
        ]);
        return this.multiply(scaleMatrix);
    };
    Matrix3D.prototype.rotate = function (o) {
        return this.rotateZ(o);
    };
    Matrix3D.prototype.rotateX = function (o) {
        var d2pi = deg2PI(o);
        var cosb = cos(d2pi);
        var sinb = sin(d2pi);
        var rotateMatrix = new Matrix3D([
            1, 0, 0, 0,
            0, cosb, sinb, 0,
            0, -sinb, cosb, 0,
            0, 0, 0, 1
        ]);
        return this.multiply(rotateMatrix);
    };
    Matrix3D.prototype.rotateY = function (o) {
        var d2pi = deg2PI(o);
        var cosb = cos(d2pi);
        var sinb = sin(d2pi);
        var rotateMatrix = new Matrix3D([
            cosb, 0, -sinb, 0,
            0, 1, 0, 0,
            sinb, 0, cosb, 0,
            0, 0, 0, 1
        ]);
        return this.multiply(rotateMatrix);
    };
    /**
     * 绕Z轴旋转
     * @param  {Number} z 旋转角度
     * @return {Matrix}   返回旋转后的矩阵
     */
    Matrix3D.prototype.rotateZ = function (z) {
        var d2pi = deg2PI(z);
        var cosb = cos(d2pi);
        var sinb = sin(d2pi);
        var rotateMatrix = new Matrix3D([
            cosb, sinb, 0, 0,
            -sinb, cosb, 0, 0,
            0, 0, 1, 0,
            0, 0, 0, 1
        ]);
        return this.multiply(rotateMatrix);
    };
    Matrix3D.prototype.translate = function (x, y, z) {
        if (x === void 0) { x = 0; }
        if (y === void 0) { y = 0; }
        if (z === void 0) { z = 0; }
        var translateMatrix = new Matrix3D([
            1, 0, 0, x,
            0, 1, 0, y,
            0, 0, 1, z,
            0, 0, 0, 1
        ]);
        return this.multiply(translateMatrix);
    };
    Matrix3D.prototype.translateX = function (x) {
        var translateMatrix = new Matrix3D([
            1, 0, 0, x,
            0, 1, 0, 0,
            0, 0, 1, 0,
            0, 0, 0, 1
        ]);
        return this.multiply(translateMatrix);
    };
    Matrix3D.prototype.translateY = function (y) {
        var translateMatrix = new Matrix3D([
            1, 0, 0, 0,
            0, 1, 0, y,
            0, 0, 1, 0,
            0, 0, 0, 1
        ]);
        return this.multiply(translateMatrix);
    };
    Matrix3D.prototype.translateZ = function (z) {
        var translateMatrix = new Matrix3D([
            1, 0, 0, 0,
            0, 1, 0, 0,
            0, 0, 1, z,
            0, 0, 0, 1
        ]);
        return this.multiply(translateMatrix);
    };
    Matrix3D.prototype.skew = function (degx, degy) {
        if (degx === void 0) { degx = 0; }
        if (degy === void 0) { degy = 0; }
        var d2pix = deg2PI(degx);
        var d2piy = deg2PI(degy);
        var tanbx = tan(d2pix);
        var tanby = tan(d2piy);
        var skewMatrix = new Matrix3D([
            1, tanbx, 0, 0,
            tanby, 1, 0, 0,
            0, 0, 1, 0,
            0, 0, 0, 1
        ]);
        return this.multiply(skewMatrix);
    };
    Matrix3D.prototype.skewX = function (deg) {
        var d2pi = deg2PI(deg);
        var tanb = tan(d2pi);
        var skewMatrix = new Matrix3D([
            1, tanb, 0, 0,
            0, 1, 0, 0,
            0, 0, 1, 0,
            0, 0, 0, 1
        ]);
        return this.multiply(skewMatrix);
    };
    Matrix3D.prototype.skewY = function (deg) {
        var d2pi = deg2PI(deg);
        var tanb = tan(d2pi);
        var skewMatrix = new Matrix3D([
            1, 0, 0, 0,
            tanb, 1, 0, 0,
            0, 0, 1, 0,
            0, 0, 0, 1
        ]);
        return this.multiply(skewMatrix);
    };
    Matrix3D.prototype.toString = function () {
        var a = this.arr;
        var out = [];
        for (var i = 0; i < 4; i++) {
            out = out.concat([a[i], a[i + 4], a[i + 8], a[i + 12]]);
        }
        return "matrix3d(" + out.join(',') + ")";
    };
    return Matrix3D;
}());
exports.Matrix3D = Matrix3D;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWF0cml4M0QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvTWF0cml4M0QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFBO0FBQ3BCLElBQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUE7QUFDcEIsSUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQTtBQUNwQixJQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFBO0FBQ3hCLElBQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUE7QUFDdEIsSUFBTSxNQUFNLEdBQUcsVUFBQyxHQUFVLElBQUssT0FBQSxJQUFJLENBQUMsRUFBRSxHQUFHLEdBQUcsR0FBRyxHQUFHLEVBQW5CLENBQW1CLENBQUE7QUFFbEQ7SUFLSSxrQkFBWSxNQUtYO1FBVE8sUUFBRyxHQUFhLEVBQUUsQ0FBQztRQUNuQixRQUFHLEdBQUcsQ0FBQyxDQUFBO1FBQ1AsU0FBSSxHQUFHLENBQUMsQ0FBQTtRQVFaLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDVCxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUE7U0FDZDthQUFNLElBQUksTUFBTSxZQUFZLFFBQVEsRUFBRTtZQUNuQyxJQUFJLENBQUMsR0FBRyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUM7U0FDekI7YUFBTSxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDOUIsSUFBSSxNQUFNLENBQUMsTUFBTSxJQUFJLEVBQUUsRUFBRTtnQkFDckIsTUFBTSxJQUFJLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFBO2FBQzNDO2lCQUFNO2dCQUNILElBQUksQ0FBQyxHQUFHLEdBQUcsTUFBTSxDQUFBO2FBQ3BCO1NBQ0o7YUFBTSxJQUFJLE9BQU8sTUFBTSxJQUFJLFFBQVEsRUFBRTtZQUNsQyxJQUFJLE1BQU0sR0FBRyxJQUFJLFFBQVEsRUFBRSxDQUFDO1lBQzVCLElBQUksTUFBTSxDQUFDLFNBQVMsRUFBRTtnQkFDbEIsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFBO2FBQzlGO1lBQ0QsSUFBSSxNQUFNLENBQUMsS0FBSyxFQUFFO2dCQUNkLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQTthQUM3RjtZQUNELElBQUksTUFBTSxDQUFDLE1BQU0sRUFBRTtnQkFDZixNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUE7YUFDbkc7WUFDRCxJQUFJLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Z0JBQ2IsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7YUFDOUQ7WUFDRCxJQUFJLENBQUMsR0FBRyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUM7U0FDekI7SUFDTCxDQUFDO0lBRUQsdUJBQUksR0FBSjtRQUNJLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQTtRQUNuQyxRQUFRO1FBQ1IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFFBQVEsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMvQixJQUFJLEdBQUcsR0FBRyxLQUFLLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTtZQUM5QixJQUFJLEdBQUcsS0FBSyxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksRUFBRTtnQkFDdkIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUE7YUFDbkI7aUJBQU07Z0JBQ0gsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUE7YUFDbkI7U0FDSjtJQUNMLENBQUM7SUFFRCwyQkFBUSxHQUFSLFVBQVMsTUFBZ0I7UUFDckIsT0FBTztRQUNQLElBQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUE7UUFDcEIsSUFBTSxDQUFDLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQTtRQUNwQixJQUFJLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFBO1FBQ3hFLElBQUksR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUE7UUFDeEUsSUFBSSxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQTtRQUN6RSxJQUFJLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFBO1FBRXpFLElBQUksR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUE7UUFDeEUsSUFBSSxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQTtRQUN4RSxJQUFJLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFBO1FBQ3pFLElBQUksR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUE7UUFFekUsSUFBSSxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQTtRQUMxRSxJQUFJLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFBO1FBQzFFLElBQUksR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUE7UUFDM0UsSUFBSSxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQTtRQUUzRSxJQUFJLEdBQUcsR0FBRyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFBO1FBQzVFLElBQUksR0FBRyxHQUFHLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUE7UUFDNUUsSUFBSSxHQUFHLEdB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QUM7WUFDMUIsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztZQUNWLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUM7WUFDYixDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO1lBQ1YsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztTQUNiLENBQUMsQ0FBQTtRQUNGLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQTtJQUNwQyxDQUFDO0lBRUQsMkJBQVEsR0FBUjtRQUNJLElBQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUE7UUFDbEIsSUFBSSxHQUFHLEdBQWEsRUFBRSxDQUFBO1FBQ3RCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDeEIsR0FBRyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFBO1NBQzFEO1FBQ0QsT0FBTyxjQUFZLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQUcsQ0FBQTtJQUN2QyxDQUFDO0lBQ0wsZUFBQztBQUFELENBQUMsQUE3UEQsSUE2UEM7QUE3UFksNEJBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb3MgPSBNYXRoLmNvc1xyXG5jb25zdCBzaW4gPSBNYXRoLnNpblxyXG5jb25zdCB0YW4gPSBNYXRoLnRhblxyXG5jb25zdCBmbG9vciA9IE1hdGguZmxvb3JcclxuY29uc3Qgc3FydCA9IE1hdGguc3FydFxyXG5jb25zdCBkZWcyUEkgPSAoZGVnOm51bWJlcikgPT4gTWF0aC5QSSAvIDE4MCAqIGRlZ1xyXG5cclxuZXhwb3J0IGNsYXNzIE1hdHJpeDNEIHtcclxuICAgIHByaXZhdGUgYXJyOiBudW1iZXJbXSA9IFtdO1xyXG4gICAgcHJpdmF0ZSByb3cgPSA0XHJcbiAgICBwcml2YXRlIGNvbHMgPSA0XHJcblxyXG4gICAgY29uc3RydWN0b3Iob3B0aW9uPzogbnVtYmVyW10gfCBNYXRyaXgzRCB8IHtcclxuICAgICAgICB0cmFuc2xhdGU/OiB7IHg6IG51bWJlciwgeTogbnVtYmVyLCB6OiBudW1iZXIgfSxcclxuICAgICAgICBzY2FsZT86IHsgeDogbnVtYmVyLCB5OiBudW1iZXIsIHo6IG51bWJlciB9LFxyXG4gICAgICAgIHJvdGF0ZT86IHsgeDogbnVtYmVyLCB5OiBudW1iZXIsIHo6IG51bWJlciB9LFxyXG4gICAgICAgIHNrZXc/OiB7IHg6IG51bWJlciwgeTogbnVtYmVyIH1cclxuICAgIH0pIHtcclxuICAgICAgICBpZiAoIW9wdGlvbikge1xyXG4gICAgICAgICAgICB0aGlzLmluaXQoKVxyXG4gICAgICAgIH0gZWxzZSBpZiAob3B0aW9uIGluc3RhbmNlb2YgTWF0cml4M0QpIHtcclxuICAgICAgICAgICAgdGhpcy5hcnIgPSBvcHRpb24uYXJyO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShvcHRpb24pKSB7XHJcbiAgICAgICAgICAgIGlmIChvcHRpb24ubGVuZ3RoICE9IDE2KSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJvcHRpb24ubGVuZ3RoIG11c3QgMTZcIilcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYXJyID0gb3B0aW9uXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb24gPT0gJ29iamVjdCcpIHtcclxuICAgICAgICAgICAgbGV0IG1hdHJpeCA9IG5ldyBNYXRyaXgzRCgpO1xyXG4gICAgICAgICAgICBpZiAob3B0aW9uLnRyYW5zbGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgbWF0cml4LnRyYW5zbGF0ZShvcHRpb24udHJhbnNsYXRlLnggfHwgMCwgb3B0aW9uLnRyYW5zbGF0ZS54IHx8IDAsIG9wdGlvbi50cmFuc2xhdGUueCB8fCAwKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChvcHRpb24uc2NhbGUpIHtcclxuICAgICAgICAgICAgICAgIG1hdHJpeC5zY2FsZVgob3B0aW9uLnNjYWxlLnggfHwgMSkuc2NhbGVZKG9wdGlvbi5zY2FsZS55IHx8IDEpLnNjYWxlWihvcHRpb24uc2NhbGUueiB8fCAxKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChvcHRpb24ucm90YXRlKSB7XHJcbiAgICAgICAgICAgICAgICBtYXRyaXgucm90YXRlWChvcHRpb24ucm90YXRlLnggfHwgMCkucm90YXRlWShvcHRpb24ucm90YXRlLnkgfHwgMCkucm90YXRlWihvcHRpb24ucm90YXRlLnogfHwgMClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAob3B0aW9uLnNrZXcpIHtcclxuICAgICAgICAgICAgICAgIG1hdHJpeC5za2V3WChvcHRpb24uc2tldy54IHx8IDApLnNrZXdZKG9wdGlvbi5za2V3LnkgfHwgMCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5hcnIgPSBtYXRyaXguYXJyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpbml0KCkgeyAvLyDliJ3lp4vljJbkuIDkuKrpobnpk77nn6npmLVcclxuICAgICAgICB2YXIgYWxsVG90YWwgPSB0aGlzLnJvdyAqIHRoaXMuY29sc1xyXG4gICAgICAgIC8vIOaAu+mhueebruaVsOmHj1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWxsVG90YWw7IGkrKykge1xyXG4gICAgICAgICAgICB2YXIgcm93ID0gZmxvb3IoaSAvIHRoaXMuY29scylcclxuICAgICAgICAgICAgaWYgKHJvdyA9PT0gaSAlIHRoaXMuY29scykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hcnIucHVzaCgxKVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hcnIucHVzaCgwKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG11bHRpcGx5KG1hdHJpeDogTWF0cml4M0QpOiBNYXRyaXgzRCB7XHJcbiAgICAgICAgLy8g55+p6Zi15LmY5rOVXHJcbiAgICAgICAgY29uc3QgYXJyID0gdGhpcy5hcnJcclxuICAgICAgICBjb25zdCBiID0gbWF0cml4LmFyclxyXG4gICAgICAgIHZhciBjMDAgPSBhcnJbMF0gKiBiWzBdICsgYXJyWzFdICogYls0XSArIGFyclsyXSAqIGJbOF0gKyBhcnJbM10gKiBiWzEyXVxyXG4gICAgICAgIHZhciBjMDEgPSBhcnJbMF0gKiBiWzFdICsgYXJyWzFdICogYls1XSArIGFyclsyXSAqIGJbOV0gKyBhcnJbM10gKiBiWzEzXVxyXG4gICAgICAgIHZhciBjMDIgPSBhcnJbMF0gKiBiWzJdICsgYXJyWzFdICogYls2XSArIGFyclsyXSAqIGJbMTBdICsgYXJyWzNdICogYlsxNF1cclxuICAgICAgICB2YXIgYzAzID0gYXJyWzBdICogYlszXSArIGFyclsxXSAqIGJbN10gKyBhcnJbMl0gKiBiWzExXSArIGFyclszXSAqIGJbMTVdXHJcblxyXG4gICAgICAgIHZhciBjMTAgPSBhcnJbNF0gKiBiWzBdICsgYXJyWzVdICogYls0XSArIGFycls2XSAqIGJbOF0gKyBhcnJbN10gKiBiWzEyXVxyXG4gICAgICAgIHZhciBjMTEgPSBhcnJbNF0gKiBiWzFdICsgYXJyWzVdICogYls1XSArIGFycls2XSAqIGJbOV0gKyBhcnJbN10gKiBiWzEzXVxyXG4gICAgICAgIHZhciBjMTIgPSBhcnJbNF0gKiBiWzJdICsgYXJyWzVdICogYls2XSArIGFycls2XSAqIGJbMTBdICsgYXJyWzddICogYlsxNF1cclxuICAgICAgICB2YXIgYzEzID0gYXJyWzRdICogYlszXSArIGFycls1XSAqIGJbN10gKyBhcnJbNl0gKiBiWzExXSArIGFycls3XSAqIGJbMTVdXHJcblxyXG4gICAgICAgIHZhciBjMjAgPSBhcnJbOF0gKiBiWzBdICsgYXJyWzldICogYls0XSArIGFyclsxMF0gKiBiWzhdICsgYXJyWzExXSAqIGJbMTJdXHJcbiAgICAgICAgdmFyIGMyMSA9IGFycls4XSAqIGJbMV0gKyBhcnJbOV0gKiBiWzVdICsgYXJyWzEwXSAqIGJbOV0gKyBhcnJbMTFdICogYlsxM11cclxuICAgICAgICB2YXIgYzIyID0gYXJyWzhdICogYlsyXSArIGFycls5XSAqIGJbNl0gKyBhcnJbMTBdICogYlsxMF0gKyBhcnJbMTFdICogYlsxNF1cclxuICAgICAgICB2YXIgYzIzID0gYXJyWzhdICogYlszXSArIGFycls5XSAqIGJbN10gKyBhcnJbMTBdICogYlsxMV0gKyBhcnJbMTFdICogYlsxNV1cclxuXHJcbiAgICAgICAgdmFyIGMzMCA9IGFyclsxMl0gKiBiWzBdICsgYXJyWzEzXSAqIGJbNF0gKyBhcnJbMTRdICogYls4XSArIGFyclsxNV0gKiBiWzEyXVxyXG4gICAgICAgIHZhciBjMzEgPSBhcnJbMTJdICogYlsxXSArIGFyclsxM10gKiBiWzVdICsgYXJyWzE0XSAqIGJbOV0gKyBhcnJbMTVdICogYlsxM11cclxuICAgICAgICB2YXIgYzMyID0gYXJyWzEyXSAqIGJbMl0gKyBhcnJbMTNdICogYls2XSArIGFyclsxNF0gKiBiWzEwXSArIGFyclsxNV0gKiBiWzE0XVxyXG4gICAgICAgIHZhciBjMzMgPSBhcnJbMTJdICogYlszXSArIGFyclsxM10gKiBiWzddICsgYXJyWzE0XSAqIGJbMTFdICsgYXJyWzE1XSAqIGJbMTVdXHJcblxyXG4gICAgICAgIHRoaXMuYXJyID0gWyAvLyDov5Tlm57nn6npmLVcclxuICAgICAgICAgICAgYzAwLCBjMDEsIGMwMiwgYzAzLFxyXG4gICAgICAgICAgICBjMTAsIGMxMSwgYzEyLCBjMTMsXHJcbiAgICAgICAgICAgIGMyMCwgYzIxLCBjMjIsIGMyMyxcclxuICAgICAgICAgICAgYzMwLCBjMzEsIGMzMiwgYzMzXHJcbiAgICAgICAgXVxyXG4gICAgICAgIHJldHVybiB0aGlzXHJcbiAgICB9XHJcblxyXG4gICAgc2NhbGUoczogbnVtYmVyKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc2NhbGVYKHMpLnNjYWxlWShzKS5zY2FsZVoocylcclxuICAgIH1cclxuXHJcbiAgICBzY2FsZVgoczogbnVtYmVyKSB7XHJcbiAgICAgICAgdmFyIHNjYWxlTWF0cml4ID0gbmV3IE1hdHJpeDNEKFtcclxuICAgICAgICAgICAgcywgMCwgMCwgMCxcclxuICAgICAgICAgICAgMCwgMSwgMCwgMCxcclxuICAgICAgICAgICAgMCwgMCwgMSwgMCxcclxuICAgICAgICAgICAgMCwgMCwgMCwgMVxyXG4gICAgICAgIF0pXHJcbiAgICAgICAgcmV0dXJuIHRoaXMubXVsdGlwbHkoc2NhbGVNYXRyaXgpXHJcbiAgICB9XHJcblxyXG4gICAgc2NhbGVZKHM6IG51bWJlcikge1xyXG4gICAgICAgIHZhciBzY2FsZU1hdHJpeCA9IG5ldyBNYXRyaXgzRChbXHJcbiAgICAgICAgICAgIDEsIDAsIDAsIDAsXHJcbiAgICAgICAgICAgIDAsIHMsIDAsIDAsXHJcbiAgICAgICAgICAgIDAsIDAsIDEsIDAsXHJcbiAgICAgICAgICAgIDAsIDAsIDAsIDFcclxuICAgICAgICBdKVxyXG4gICAgICAgIHJldHVybiB0aGlzLm11bHRpcGx5KHNjYWxlTWF0cml4KVxyXG4gICAgfVxyXG5cclxuICAgIHNjYWxlWihzOiBudW1iZXIpIHtcclxuICAgICAgICB2YXIgc2NhbGVNYXRyaXggPSBuZXcgTWF0cml4M0QoW1xyXG4gICAgICAgICAgICAxLCAwLCAwLCAwLFxyXG4gICAgICAgICAgICAwLCAxLCAwLCAwLFxyXG4gICAgICAgICAgICAwLCAwLCBzLCAwLFxyXG4gICAgICAgICAgICAwLCAwLCAwLCAxXHJcbiAgICAgICAgXSlcclxuICAgICAgICByZXR1cm4gdGhpcy5tdWx0aXBseShzY2FsZU1hdHJpeClcclxuICAgIH1cclxuXHJcbiAgICByb3RhdGUobzogbnVtYmVyKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucm90YXRlWihvKVxyXG4gICAgfVxyXG5cclxuICAgIHJvdGF0ZVgobzogbnVtYmVyKSB7XHJcbiAgICAgICAgY29uc3QgZDJwaSA9IGRlZzJQSShvKVxyXG4gICAgICAgIGNvbnN0IGNvc2IgPSBjb3MoZDJwaSlcclxuICAgICAgICBjb25zdCBzaW5iID0gc2luKGQycGkpXHJcbiAgICAgICAgdmFyIHJvdGF0ZU1hdHJpeCA9IG5ldyBNYXRyaXgzRChbXHJcbiAgICAgICAgICAgIDEsIDAsIDAsIDAsXHJcbiAgICAgICAgICAgIDAsIGNvc2IsIHNpbmIsIDAsXHJcbiAgICAgICAgICAgIDAsIC1zaW5iLCBjb3NiLCAwLFxyXG4gICAgICAgICAgICAwLCAwLCAwLCAxXHJcbiAgICAgICAgXSlcclxuICAgICAgICByZXR1cm4gdGhpcy5tdWx0aXBseShyb3RhdGVNYXRyaXgpXHJcbiAgICB9XHJcblxyXG4gICAgcm90YXRlWShvOiBudW1iZXIpIHtcclxuICAgICAgICBjb25zdCBkMnBpID0gZGVnMlBJKG8pXHJcbiAgICAgICAgY29uc3QgY29zYiA9IGNvcyhkMnBpKVxyXG4gICAgICAgIGNvbnN0IHNpbmIgPSBzaW4oZDJwaSlcclxuICAgICAgICB2YXIgcm90YXRlTWF0cml4ID0gbmV3IE1hdHJpeDNEKFtcclxuICAgICAgICAgICAgY29zYiwgMCwgLXNpbmIsIDAsXHJcbiAgICAgICAgICAgIDAsIDEsIDAsIDAsXHJcbiAgICAgICAgICAgIHNpbmIsIDAsIGNvc2IsIDAsXHJcbiAgICAgICAgICAgIDAsIDAsIDAsIDFcclxuICAgICAgICBdKVxyXG4gICAgICAgIHJldHVybiB0aGlzLm11bHRpcGx5KHJvdGF0ZU1hdHJpeClcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOe7lVrovbTml4vovaxcclxuICAgICAqIEBwYXJhbSAge051bWJlcn0geiDml4vovazop5LluqZcclxuICAgICAqIEByZXR1cm4ge01hdHJpeH0gICDov5Tlm57ml4vovazlkI7nmoTnn6npmLVcclxuICAgICAqL1xyXG4gICAgcm90YXRlWih6OiBudW1iZXIpIHtcclxuICAgICAgICBjb25zdCBkMnBpID0gZGVnMlBJKHopXHJcbiAgICAgICAgY29uc3QgY29zYiA9IGNvcyhkMnBpKVxyXG4gICAgICAgIGNvbnN0IHNpbmIgPSBzaW4oZDJwaSlcclxuICAgICAgICB2YXIgcm90YXRlTWF0cml4ID0gbmV3IE1hdHJpeDNEKFtcclxuICAgICAgICAgICAgY29zYiwgc2luYiwgMCwgMCxcclxuICAgICAgICAgICAgLXNpbmIsIGNvc2IsIDAsIDAsXHJcbiAgICAgICAgICAgIDAsIDAsIDEsIDAsXHJcbiAgICAgICAgICAgIDAsIDAsIDAsIDFcclxuICAgICAgICBdKVxyXG4gICAgICAgIHJldHVybiB0aGlzLm11bHRpcGx5KHJvdGF0ZU1hdHJpeClcclxuICAgIH1cclxuXHJcbiAgICB0cmFuc2xhdGUoeCA9IDAsIHkgPSAwLCB6ID0gMCkge1xyXG4gICAgICAgIHZhciB0cmFuc2xhdGVNYXRyaXggPSBuZXcgTWF0cml4M0QoW1xyXG4gICAgICAgICAgICAxLCAwLCAwLCB4LFxyXG4gICAgICAgICAgICAwLCAxLCAwLCB5LFxyXG4gICAgICAgICAgICAwLCAwLCAxLCB6LFxyXG4gICAgICAgICAgICAwLCAwLCAwLCAxXHJcbiAgICAgICAgXSlcclxuICAgICAgICByZXR1cm4gdGhpcy5tdWx0aXBseSh0cmFuc2xhdGVNYXRyaXgpXHJcbiAgICB9XHJcblxyXG4gICAgdHJhbnNsYXRlWCh4OiBudW1iZXIpIHtcclxuICAgICAgICB2YXIgdHJhbnNsYXRlTWF0cml4ID0gbmV3IE1hdHJpeDNEKFtcclxuICAgICAgICAgICAgMSwgMCwgMCwgeCxcclxuICAgICAgICAgICAgMCwgMSwgMCwgMCxcclxuICAgICAgICAgICAgMCwgMCwgMSwgMCxcclxuICAgICAgICAgICAgMCwgMCwgMCwgMVxyXG4gICAgICAgIF0pXHJcbiAgICAgICAgcmV0dXJuIHRoaXMubXVsdGlwbHkodHJhbnNsYXRlTWF0cml4KVxyXG4gICAgfVxyXG5cclxuICAgIHRyYW5zbGF0ZVkoeTogbnVtYmVyKSB7XHJcbiAgICAgICAgdmFyIHRyYW5zbGF0ZU1hdHJpeCA9IG5ldyBNYXRyaXgzRChbXHJcbiAgICAgICAgICAgIDEsIDAsIDAsIDAsXHJcbiAgICAgICAgICAgIDAsIDEsIDAsIHksXHJcbiAgICAgICAgICAgIDAsIDAsIDEsIDAsXHJcbiAgICAgICAgICAgIDAsIDAsIDAsIDFcclxuICAgICAgICBdKVxyXG4gICAgICAgIHJldHVybiB0aGlzLm11bHRpcGx5KHRyYW5zbGF0ZU1hdHJpeClcclxuICAgIH1cclxuXHJcbiAgICB0cmFuc2xhdGVaKHo6IG51bWJlcikge1xyXG4gICAgICAgIHZhciB0cmFuc2xhdGVNYXRyaXggPSBuZXcgTWF0cml4M0QoW1xyXG4gICAgICAgICAgICAxLCAwLCAwLCAwLFxyXG4gICAgICAgICAgICAwLCAxLCAwLCAwLFxyXG4gICAgICAgICAgICAwLCAwLCAxLCB6LFxyXG4gICAgICAgICAgICAwLCAwLCAwLCAxXHJcbiAgICAgICAgXSlcclxuICAgICAgICByZXR1cm4gdGhpcy5tdWx0aXBseSh0cmFuc2xhdGVNYXRyaXgpXHJcbiAgICB9XHJcblxyXG4gICAgc2tldyhkZWd4ID0gMCwgZGVneSA9IDApIHtcclxuICAgICAgICBjb25zdCBkMnBpeCA9IGRlZzJQSShkZWd4KVxyXG4gICAgICAgIGNvbnN0IGQycGl5ID0gZGVnMlBJKGRlZ3kpXHJcbiAgICAgICAgY29uc3QgdGFuYnggPSB0YW4oZDJwaXgpXHJcbiAgICAgICAgY29uc3QgdGFuYnkgPSB0YW4oZDJwaXkpXHJcbiAgICAgICAgdmFyIHNrZXdNYXRyaXggPSBuZXcgTWF0cml4M0QoW1xyXG4gICAgICAgICAgICAxLCB0YW5ieCwgMCwgMCxcclxuICAgICAgICAgICAgdGFuYnksIDEsIDAsIDAsXHJcbiAgICAgICAgICAgIDAsIDAsIDEsIDAsXHJcbiAgICAgICAgICAgIDAsIDAsIDAsIDFcclxuICAgICAgICBdKVxyXG4gICAgICAgIHJldHVybiB0aGlzLm11bHRpcGx5KHNrZXdNYXRyaXgpXHJcbiAgICB9XHJcblxyXG4gICAgc2tld1goZGVnOiBudW1iZXIpIHtcclxuICAgICAgICBjb25zdCBkMnBpID0gZGVnMlBJKGRlZylcclxuICAgICAgICBjb25zdCB0YW5iID0gdGFuKGQycGkpXHJcbiAgICAgICAgdmFyIHNrZXdNYXRyaXggPSBuZXcgTWF0cml4M0QoW1xyXG4gICAgICAgICAgICAxLCB0YW5iLCAwLCAwLFxyXG4gICAgICAgICAgICAwLCAxLCAwLCAwLFxyXG4gICAgICAgICAgICAwLCAwLCAxLCAwLFxyXG4gICAgICAgICAgICAwLCAwLCAwLCAxXHJcbiAgICAgICAgXSlcclxuICAgICAgICByZXR1cm4gdGhpcy5tdWx0aXBseShza2V3TWF0cml4KVxyXG4gICAgfVxyXG5cclxuICAgIHNrZXdZKGRlZzogbnVtYmVyKSB7XHJcbiAgICAgICAgY29uc3QgZDJwaSA9IGRlZzJQSShkZWcpXHJcbiAgICAgICAgY29uc3QgdGFuYiA9IHRhbihkMnBpKVxyXG4gICAgICAgIHZhciBza2V3TWF0cml4ID0gbmV3IE1hdHJpeDNEKFtcclxuICAgICAgICAgICAgMSwgMCwgMCwgMCxcclxuICAgICAgICAgICAgdGFuYiwgMSwgMCwgMCxcclxuICAgICAgICAgICAgMCwgMCwgMSwgMCxcclxuICAgICAgICAgICAgMCwgMCwgMCwgMVxyXG4gICAgICAgIF0pXHJcbiAgICAgICAgcmV0dXJuIHRoaXMubXVsdGlwbHkoc2tld01hdHJpeClcclxuICAgIH1cclxuXHJcbiAgICB0b1N0cmluZygpOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IGEgPSB0aGlzLmFyclxyXG4gICAgICAgIGxldCBvdXQ6IG51bWJlcltdID0gW11cclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDQ7IGkrKykge1xyXG4gICAgICAgICAgICBvdXQgPSBvdXQuY29uY2F0KFthW2ldLCBhW2kgKyA0XSwgYVtpICsgOF0sIGFbaSArIDEyXV0pXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBgbWF0cml4M2QoJHtvdXQuam9pbignLCcpfSlgXHJcbiAgICB9XHJcbn1cclxuIl19